.buttonModalOff {
    position: fixed;
    z-index: -10;
    top: 50px;
    right: 50px;
    opacity: 0;
    transition: 0.5s;
}

.activeButtonModalOff {
    z-index: 2015;
    opacity: 1;
}




.modal {
    height: 100vh;
    width: 100vw;
    background-color: rgba(0, 0, 0, 0.8);
    position: fixed;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    opacity: 0;
    z-index: -10;
    transition: 0.5s;
}

.activeModal {
    opacity: 1;
    z-index: 2010;
}

.contentWrapper {
    z-index: -10;
    height: 100%;
    width: 100%;
    justify-content: center;
    align-items: flex-start;
    position: absolute;
    top: 0px;
    left: 0px;
    display: none;
}

.activeContentWrapper {
    z-index: 2011;
    display: flex;
}

.contentModal {
    overflow-y: scroll;
    position: relative;
    height: 100%;
    padding: 20px;
    background-color: white;
    width: 50%;
    font-size: 25px;
    transform: scale(0);
    transition: 0.4s;
}

.activeContentModal {
    transform: scale(1);

}

.dragScroll {
  width: 100%;
  height: 100%;
  overflow: auto;
}
/*
let modalClass = classes.modal + ' ' + ( modal ? classes.activeModal : '')
let contentModalClass = classes.contentModal + ' ' + ( modal ? classes.activeContentModal : '')
let contentWrapper = classes.contentWrapper + ' ' + ( modal ? classes.activeContentWrapper : '')



<div className={modalClass}>
</div>

<ScrollContainer className={contentWrapper}>
    <div className={contentModalClass}>
        <Box display='flex' justifyContent='center' my={1}>
            <Pagination count={chapters.count} color="primary" onChange={getNewChapter}/>
        </Box>
        some test text ----
        {chapters.results.length && chapters.results[0].chapter}
    </div>
</ScrollContainer>
*/
