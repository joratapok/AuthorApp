docker pull busybox  скачиваем образ
docker run busybox echo "some text"   создаем контейнер
docker ps -a
docker run -it image_name sh заходим в образ

docker volume ls
docker volume prune - удалить все локальные незадействованые volume




docker-compose build
docker-compose up
docker-compose down


docker-compose -f docker-compose.prod.yml up
docker-compose -f docker-compose.prod.yml down -v
docker-compose -f docker-compose.prod.yml exec web python manage.py migrate --noinput
docker-compose -f docker-compose.prod.yml exec web python manage.py collectstatic
docker-compose -f docker-compose.prod.yml exec web python manage.py createsuperuser


docker exec -it django_books_web_1 bash - попасть внутрь контейнера
docker exec -u 0 -it django_books_web_1 bash - зайти под рутом
python manage.py makemigrations
python manage.py migrate
python manage.py collectstatic
python manage.py createsuperuser


docker exec -it django_books_web_1 python manage.py makemigrations
docker exec -it django_books_web_1 python manage.py migrate --noinput
docker exec -it django_books_web_1 python manage.py collectstatic
docker exec -it django_books_web_1 python manage.py createsuperuser




docker exec -t django_books_db_1 pg_dumpall -c -U django_user_marina_book > dump_`date +%d-%m-%Y"_"%H_%M_%S`.sql  - сохраняем дамп БД
Восставновление = оставить одну из этих:
docker exec -i -u django_user_marina_book django_books_db_1 pg_restore -C -d django_books_prod < dump-name
cat your_dump.sql | docker exec -i your-db-container psql -U postgres


docker cp django_books_nginx_1:/var/log/nginx/access.log .   - копируем лог из контейнера